# Default values for platform-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: localhost:5000/platform-api
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

imagePullSecrets: []
nameOverride: "platform-api"
fullnameOverride: "platform-api"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
#    hosts:
#      - chart-example.local

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi


livenessProbe:
  httpGet:
    path: /heathz
    port: http
readinessProbe:
  httpGet:
    path: /heathz
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
- name: config-volume
  configMap:
    name: platform-api-configmap

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
- name: config-volume
  mountPath: /app/appsettings.Development.json
  subPath: appsettings.Development.json

env:
- name: TestEnv
  value: "Test Env"
- name: ASPNETCORE_ENVIRONMENT
  value: Development
- name: OTEL_EXPORTER_OTLP_ENDPOINT
  value: http://opentelemetry-collector.otel-demo.svc.cluster.local
- name: OTEL_SERVICE_NAME
  valueFrom:
    fieldRef:
      apiVersion: v1
      fieldPath: metadata.labels['app.kubernetes.io/component']
- name: OTEL_RESOURCE_ATTRIBUTES
  value: service.namespace=app-demo,service.version=1.1.0,test.author=hcphi

nodeSelector: {}

tolerations: []

affinity: {}
